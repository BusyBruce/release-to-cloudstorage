# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  repository_dispatch:
    types: [n8n]
    branches: [main]
    client_payload:
      release_repo_url:
        description: "release repository url"
        required: true
      release_repo_name:
        description: "release repository name"
        required: true
      release_tag:
        description: "release repository tag"
        required: true
      release_asset:
        description: "release repository asset name"
        required: true
      onedrive_prefix_path:
        description: "onedrive prefix path"
        required: false
      cloud189_prefix_path:
        description: "cloud 189 prefix path"
        required: false

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  ENABLE_CLOUD189: 'false'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "upload"
  upload:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Init tools
      - name: Init tools
        run: |
          chmod +x ./fetch
          chmod +x ./OneDriveUploader
          chmod +x ./cloudpan189-go
          chmod +x ./oneshow
          touch ./auth.json && echo $AUTH_JSON > ./auth.json && exit 0
          touch ./od.json && echo $ONESHOW_JSON > ./od.json && exit 0
        env:
          AUTH_JSON: ${{ secrets.ONEDRIVE_AUTH }}
          ONESHOW_JSON: ${{ secrets.ONESHOW_AUTH }}

      # fetch release asset
      - name: fetch release asset
        run: |
          mkdir -p ./${{github.event.client_payload.release_repo_name}}/${{github.event.client_payload.release_tag}}
          ./fetch --repo="${{github.event.client_payload.release_repo_url}}" --github-oauth-token=$GITHUB_TOKEN --tag="${{github.event.client_payload.release_tag}}" --release-asset="${{github.event.client_payload.release_asset}}" ./${{github.event.client_payload.release_repo_name}}/${{github.event.client_payload.release_tag}}
        env:
          GITHUB_TOKEN: ${{ secrets.FETCH_TOKEN }}

      # upload to onedrive
      - name: upload to onedrive
        run: |
          touch ~/.od.json && echo $ONESHOW_JSON > ~/.od.json && exit 0
          ./oneshow u -s ./${{github.event.client_payload.release_repo_name}}/ -f /Public/odindex-cf/${{github.event.client_payload.onedrive_prefix_path}}/${{github.event.client_payload.release_repo_name}}
        env:
          ONESHOW_JSON: ${{ secrets.ONESHOW_AUTH }}

      # upload to cloud189
      - name: upload to cloud189
        if: ${{ env.ENABLE_CLOUD189 == 'true' }}
        run: |
          ./cloudpan189-go login -username=$ACCOUNT -password=$PASSWORD
          ./cloudpan189-go upload ./${{github.event.client_payload.release_repo_name}}/${{github.event.client_payload.release_tag}} "/Public/odindex-cf/${{github.event.client_payload.cloud189_prefix_path}}/${{github.event.client_payload.release_repo_name}}"
        env:
          ACCOUNT: ${{secrets.CLOUD189_ACCOUNT}}
          PASSWORD: ${{secrets.CLOUD189_PASSWORD}}
